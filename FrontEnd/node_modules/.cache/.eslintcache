[{"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\index.js":"1","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\App.js":"2","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\login.jsx":"4","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\navBar.jsx":"5","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\dashboard.jsx":"6","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\Predict.jsx":"7","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\pieChart.jsx":"8","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\tierOverview.jsx":"9","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\common\\Select.jsx":"10","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\outletOverview.jsx":"11","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\categorysales.jsx":"12","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\CategoryView.jsx":"13","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\itemsales.jsx":"14"},{"size":995,"mtime":1620336433577,"results":"15","hashOfConfig":"16"},{"size":2158,"mtime":1620425248183,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1620335776127,"results":"18","hashOfConfig":"16"},{"size":3188,"mtime":1620425248196,"results":"19","hashOfConfig":"16"},{"size":2585,"mtime":1620425248199,"results":"20","hashOfConfig":"16"},{"size":15183,"mtime":1620431874851,"results":"21","hashOfConfig":"16"},{"size":8240,"mtime":1620432261053,"results":"22","hashOfConfig":"16"},{"size":3980,"mtime":1620335776122,"results":"23","hashOfConfig":"16"},{"size":1565,"mtime":1620335776123,"results":"24","hashOfConfig":"16"},{"size":594,"mtime":1620335776111,"results":"25","hashOfConfig":"16"},{"size":1048,"mtime":1620335776120,"results":"26","hashOfConfig":"16"},{"size":778,"mtime":1620335776111,"results":"27","hashOfConfig":"16"},{"size":1035,"mtime":1620335776110,"results":"28","hashOfConfig":"16"},{"size":796,"mtime":1620335776118,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"pc21px",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\index.js",["62","63"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <BrowserRouter>\r\n    \r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\App.js",["64","65","66"],"import React from \"react\";\r\nimport { GoogleCharts } from \"google-charts\";\r\nimport NavBar from \"./components/navBar\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport Login from \"./components/login\";\r\nimport \"./App.css\";\r\nimport { Route, Link, Switch, Router } from \"react-router-dom\";\r\n\r\nimport Predict from \"./components/Predict\";\r\n\r\nfunction App() {\r\n  let arr = [];\r\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n  const email = localStorage.getItem(\"email\");\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar isLoggedIn={isLoggedIn} email={email} />\r\n      <Switch>\r\n        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route exact path=\"/predict\" component={Predict} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n  function toggleButtonState() {\r\n    fetch(\"/getChartDetails\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        arr = data.data;\r\n        GoogleCharts.load(drawChart);\r\n      });\r\n    getOutletIdentifierFromTier(\"Tier 2\");\r\n  }\r\n  function getOutletIdentifierFromTier(tierValue) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ tier: tierValue }),\r\n    };\r\n    fetch(\"/getOutletNumberBasedOnTier\", requestOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        arr = data.data;\r\n        console.log(arr);\r\n      });\r\n  }\r\n\r\n  function drawChart() {\r\n    // Standard google charts functionality is available as GoogleCharts.api after load\r\n    //const data = GoogleCharts.api.visualization.arrayToDataTable(arr);\r\n    const pie_1_chart = new GoogleCharts.api.visualization.ColumnChart(\r\n      document.getElementById(\"chart1\")\r\n    );\r\n    var data = GoogleCharts.api.visualization.arrayToDataTable(arr);\r\n    var options = {\r\n      width: \"100%\",\r\n      height: 400,\r\n      legend: { position: \"bottom\", maxLines: 3 },\r\n      bar: { groupWidth: \"75%\" },\r\n      isStacked: true,\r\n    };\r\n    pie_1_chart.draw(data, options);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\login.jsx",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\navBar.jsx",["67","68","69","70"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst emailAndNames = [\r\n  {\r\n    name: \"Vaibhav\",\r\n    email: \"vaibhav@gmail.com\",\r\n  },\r\n  {\r\n    name: \"Kesiya\",\r\n    email: \"kesiya@gmail.com\",\r\n  },\r\n  {\r\n    name: \"Lekha\",\r\n    email: \"lekha@gmail.com\",\r\n  },\r\n  {\r\n    name: \"Sayali\",\r\n    email: \"sayali@gmail.com\",\r\n  },\r\n  {\r\n    name: \"Administrator\",\r\n    email: \"admin@gmail.com\",\r\n  },\r\n];\r\n\r\nexport const NavBar = (props) => {\r\n  const { isLoggedIn, email } = props;\r\n\r\n  const logout = (e) => {\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    localStorage.removeItem(\"name\");\r\n    window.location = \"/login\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          GrocerSmart\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          {isLoggedIn && (\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item active\">\r\n                <div className=\"nav-link\" href=\"\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </div>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <div className=\"nav-link\" href=\"\">\r\n                  <Link to=\"/predict\">Predict</Link>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          <ul class=\"nav navbar-nav navbar-right ml-auto\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                {isLoggedIn\r\n                  ? emailAndNames.filter((item) => item.email === email)[0].name\r\n                  : \"\"}\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"navbar-brand\" href=\"#\">\r\n                {isLoggedIn ? (\r\n                  <img src=\"/download.png\" alt=\"\" width=\"30\" height=\"24\" />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"navbar-brand\" onClick={logout}>\r\n                {isLoggedIn ? \"Logout\" : \"\"}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\dashboard.jsx",["71","72","73","74"],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\Predict.jsx",["75"],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\pieChart.jsx",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\tierOverview.jsx",["76"],"import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nvar categories = [\r\n  \"Snack Foods\",\r\n  \"Fruits and Vegetables\",\r\n  \"Household\",\r\n  \"Frozen Foods\",\r\n  \"Dairy\",\r\n  \"Baking Goods\",\r\n  \"Canned\",\r\n  \"Meat\",\r\n  \"Health and Hygiene\",\r\n  \"Soft Drinks\",\r\n  \"Others\",\r\n  \"Breads\",\r\n  \"Breakfast\",\r\n  \"Hard Drinks\",\r\n  \"Seafood\",\r\n  \"Starchy Foods\",\r\n];\r\nclass TierOverview extends React.Component {\r\n  getBarChartData = (data) => {\r\n    // console.log(\"original\", data);\r\n    const barChartData = [[\"outlets\", ...categories]];\r\n    for (const [key, value] of Object.entries(data)) {\r\n      const arr = [key];\r\n      let newValue = JSON.parse(value);\r\n      for (const [key, value] of Object.entries(newValue)) {\r\n        arr.push(value);\r\n      }\r\n      barChartData.push(arr);\r\n    }\r\n    return barChartData;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Chart\r\n          height={\"500px\"}\r\n          chartType=\"BarChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={this.getBarChartData(this.props.tierLtevelData)}\r\n          options={{\r\n            /* title: `Sales of outlets in ${this.props.tier}`, */\r\n            chartArea: { width: \"50%\" },\r\n            isStacked: true,\r\n            hAxis: {\r\n              title: \"Total Sales\",\r\n              minValue: 0,\r\n            },\r\n            vAxis: {\r\n              title: this.props.tier,\r\n            },\r\n          }}\r\n          // For tests\r\n          rootProps={{ \"data-testid\": \"3\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierOverview;\r\n","C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\common\\Select.jsx",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\outletOverview.jsx",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\categorysales.jsx",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\CategoryView.jsx",[],"C:\\Users\\Checkout\\Documents\\272\\Project\\latestPull\\Team22\\FrontEnd\\src\\components\\itemsales.jsx",[],{"ruleId":"77","severity":1,"message":"78","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":9},{"ruleId":"77","severity":1,"message":"81","line":11,"column":8,"nodeType":"79","messageId":"80","endLine":11,"endColumn":14},{"ruleId":"77","severity":1,"message":"82","line":7,"column":17,"nodeType":"79","messageId":"80","endLine":7,"endColumn":21},{"ruleId":"77","severity":1,"message":"83","line":7,"column":31,"nodeType":"79","messageId":"80","endLine":7,"endColumn":37},{"ruleId":"77","severity":1,"message":"84","line":26,"column":12,"nodeType":"79","messageId":"80","endLine":26,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":39,"column":9,"nodeType":"87","endLine":39,"endColumn":42},{"ruleId":"85","severity":1,"message":"86","line":70,"column":15,"nodeType":"87","endLine":70,"endColumn":44},{"ruleId":"85","severity":1,"message":"86","line":77,"column":15,"nodeType":"87","endLine":77,"endColumn":48},{"ruleId":"85","severity":1,"message":"88","line":86,"column":15,"nodeType":"87","endLine":86,"endColumn":56},{"ruleId":"77","severity":1,"message":"89","line":16,"column":7,"nodeType":"79","messageId":"80","endLine":16,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":249,"column":29,"nodeType":"92","messageId":"93","endLine":249,"endColumn":47},{"ruleId":"90","severity":1,"message":"91","line":254,"column":24,"nodeType":"92","messageId":"93","endLine":254,"endColumn":44},{"ruleId":"94","severity":1,"message":"95","line":254,"column":59,"nodeType":"92","messageId":"96","endLine":254,"endColumn":124},{"ruleId":"77","severity":1,"message":"97","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"77","severity":1,"message":"98","line":29,"column":19,"nodeType":"79","messageId":"80","endLine":29,"endColumn":22},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'toggleButtonState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'tableData' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","react/jsx-no-duplicate-props","No duplicate props allowed","noDuplicateProps","'RangeSlider' is defined but never used.","'key' is assigned a value but never used."]
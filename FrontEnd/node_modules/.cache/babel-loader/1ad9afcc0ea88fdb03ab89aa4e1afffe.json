{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Documents\\\\272\\\\Project\\\\latestPull\\\\Team22\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { GoogleCharts } from \"google-charts\";\nimport NavBar from \"./components/navBar\";\nimport Dashboard from \"./components/dashboard\";\nimport Login from \"./components/login\";\nimport \"./App.css\";\nimport { Route, Link, Switch, Router } from \"react-router-dom\";\nimport Predict from \"./components/Predict\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  let arr = [];\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n  const email = localStorage.getItem(\"email\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      email: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/predict\",\n        component: Predict\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  function toggleButtonState() {\n    fetch(\"/getChartDetails\").then(res => res.json()).then(data => {\n      arr = data.data;\n      GoogleCharts.load(drawChart);\n    });\n    getOutletIdentifierFromTier(\"Tier 2\");\n  }\n\n  function getOutletIdentifierFromTier(tierValue) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        tier: tierValue\n      })\n    };\n    fetch(\"/getOutletNumberBasedOnTier\", requestOptions).then(res => res.json()).then(data => {\n      arr = data.data;\n      console.log(arr);\n    });\n  }\n\n  function drawChart() {\n    // Standard google charts functionality is available as GoogleCharts.api after load\n    //const data = GoogleCharts.api.visualization.arrayToDataTable(arr);\n    const pie_1_chart = new GoogleCharts.api.visualization.ColumnChart(document.getElementById(\"chart1\"));\n    var data = GoogleCharts.api.visualization.arrayToDataTable(arr);\n    var options = {\n      width: \"100%\",\n      height: 400,\n      legend: {\n        position: \"bottom\",\n        maxLines: 3\n      },\n      bar: {\n        groupWidth: \"75%\"\n      },\n      isStacked: true\n    };\n    pie_1_chart.draw(data, options);\n  }\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Checkout/Documents/272/Project/latestPull/Team22/src/App.js"],"names":["React","GoogleCharts","NavBar","Dashboard","Login","Route","Link","Switch","Router","Predict","App","arr","isLoggedIn","localStorage","getItem","email","toggleButtonState","fetch","then","res","json","data","load","drawChart","getOutletIdentifierFromTier","tierValue","requestOptions","method","headers","body","JSON","stringify","tier","console","log","pie_1_chart","api","visualization","ColumnChart","document","getElementById","arrayToDataTable","options","width","height","legend","position","maxLines","bar","groupWidth","isStacked","draw"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { GoogleCharts } from \"google-charts\";\r\nimport NavBar from \"./components/navBar\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport Login from \"./components/login\";\r\nimport \"./App.css\";\r\nimport { Route, Link, Switch, Router } from \"react-router-dom\";\r\n\r\nimport Predict from \"./components/Predict\";\r\n\r\nfunction App() {\r\n  let arr = [];\r\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n  const email = localStorage.getItem(\"email\");\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar isLoggedIn={isLoggedIn} email={email} />\r\n      <Switch>\r\n        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route exact path=\"/predict\" component={Predict} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n  function toggleButtonState() {\r\n    fetch(\"/getChartDetails\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        arr = data.data;\r\n        GoogleCharts.load(drawChart);\r\n      });\r\n    getOutletIdentifierFromTier(\"Tier 2\");\r\n  }\r\n  function getOutletIdentifierFromTier(tierValue) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ tier: tierValue }),\r\n    };\r\n    fetch(\"/getOutletNumberBasedOnTier\", requestOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        arr = data.data;\r\n        console.log(arr);\r\n      });\r\n  }\r\n\r\n  function drawChart() {\r\n    // Standard google charts functionality is available as GoogleCharts.api after load\r\n    //const data = GoogleCharts.api.visualization.arrayToDataTable(arr);\r\n    const pie_1_chart = new GoogleCharts.api.visualization.ColumnChart(\r\n      document.getElementById(\"chart1\")\r\n    );\r\n    var data = GoogleCharts.api.visualization.arrayToDataTable(arr);\r\n    var options = {\r\n      width: \"100%\",\r\n      height: 400,\r\n      legend: { position: \"bottom\", maxLines: 3 },\r\n      bar: { groupWidth: \"75%\" },\r\n      isStacked: true,\r\n    };\r\n    pie_1_chart.draw(data, options);\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
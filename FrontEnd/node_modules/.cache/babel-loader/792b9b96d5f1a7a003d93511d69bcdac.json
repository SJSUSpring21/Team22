{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Documents\\\\272\\\\Project\\\\latestPull\\\\Team22\\\\FrontEnd\\\\src\\\\components\\\\CategoryView.jsx\";\nimport React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CategoryView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getBarChartData = data => {\n      const barChartData = [[\"categories\", \"Sales\", {\n        role: \"style\"\n      }]];\n      const colors = [\"#b87333\", \"gold\"];\n      let i = 0;\n\n      for (const [key, value] of Object.entries(data)) {\n        barChartData.push([key, value, colors[i++]]);\n      }\n\n      return barChartData;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        height: \"300px\",\n        chartType: \"BarChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this),\n        data: this.getBarChartData(this.props.data),\n        options: {\n          /* title: \"Sales of a category based on Fat Content\", */\n          width: 600,\n          height: 400,\n          bar: {\n            groupWidth: \"95%\"\n          },\n          legend: {\n            position: \"none\"\n          }\n        } // For tests\n        ,\n        rootProps: {\n          \"data-testid\": \"6\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CategoryView;","map":{"version":3,"sources":["C:/Users/Checkout/Documents/272/Project/latestPull/Team22/FrontEnd/src/components/CategoryView.jsx"],"names":["React","Chart","CategoryView","Component","getBarChartData","data","barChartData","role","colors","i","key","value","Object","entries","push","render","props","width","height","bar","groupWidth","legend","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,eADyC,GACtBC,IAAD,IAAU;AAC1B,YAAMC,YAAY,GAAG,CAAC,CAAC,YAAD,EAAe,OAAf,EAAwB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAxB,CAAD,CAArB;AACA,YAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,MAAZ,CAAf;AACA,UAAIC,CAAC,GAAG,CAAR;;AACA,WAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeR,IAAf,CAA3B,EAAiD;AAC/CC,QAAAA,YAAY,CAACQ,IAAb,CAAkB,CAACJ,GAAD,EAAMC,KAAN,EAAaH,MAAM,CAACC,CAAC,EAAF,CAAnB,CAAlB;AACD;;AACD,aAAOH,YAAP;AACD,KATwC;AAAA;;AAUzCS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAE,OADV;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHV;AAIE,QAAA,IAAI,EAAE,KAAKX,eAAL,CAAqB,KAAKY,KAAL,CAAWX,IAAhC,CAJR;AAKE,QAAA,OAAO,EAAE;AACP;AACAY,UAAAA,KAAK,EAAE,GAFA;AAGPC,UAAAA,MAAM,EAAE,GAHD;AAIPC,UAAAA,GAAG,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAJE;AAKPC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ;AALD,SALX,CAYE;AAZF;AAaE,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB;AAbb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA9BwC;;AAiC3C,eAAepB,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nclass CategoryView extends React.Component {\r\n  getBarChartData = (data) => {\r\n    const barChartData = [[\"categories\", \"Sales\", { role: \"style\" }]];\r\n    const colors = [\"#b87333\", \"gold\"];\r\n    let i = 0;\r\n    for (const [key, value] of Object.entries(data)) {\r\n      barChartData.push([key, value, colors[i++]]);\r\n    }\r\n    return barChartData;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Chart\r\n          height={\"300px\"}\r\n          chartType=\"BarChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={this.getBarChartData(this.props.data)}\r\n          options={{\r\n            /* title: \"Sales of a category based on Fat Content\", */\r\n            width: 600,\r\n            height: 400,\r\n            bar: { groupWidth: \"95%\" },\r\n            legend: { position: \"none\" },\r\n          }}\r\n          // For tests\r\n          rootProps={{ \"data-testid\": \"6\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryView;\r\n"]},"metadata":{},"sourceType":"module"}